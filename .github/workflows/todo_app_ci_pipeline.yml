name: Continuous Integration
on:
  push:
    paths-ignore:
      - 'README.md'
      - 'notes.txt'
      - 'documentation/*'
  pull_request:
    branches:
      -  master

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build docker test image
        run: docker build --target test --tag my-test-image .
      - name: Run unit and integration tests
        run: docker run --env-file .env.test my-test-image todo_app/tests
      - name: Run e2e tests
        env:
          mongo_db_connection: "${{secrets.MONGO_DB_CONNECTION}}"
          mongo_db_name: "${{secrets.MONGO_DB_NAME}}"
          git_client_id: "${{secrets.GIT_CLIENT_ID}}"
          git_client_secret: "${{secrets.GIT_CLIENT_SECRET}}"
        run: docker run -e mongo_db_connection -e mongo_db_name -e git_client_id -e git_client_secret my-test-image todo_app/e2e_tests

  publish:
    name: Push Image to DockerHub and Azure
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/exercise-12' && github.event_name == 'push'
    steps: 
      - uses: actions/checkout@v2
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: docker build --target production --tag jaisalpatel836/todo_app:latest --tag jaisalpatel836/todo_app:"$GITHUB_SHA" .
      - run: docker push jaisalpatel836/todo_app --all-tags
      - uses: Azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.TF_VAR_ARM_CLIENT_ID }}","clientSecret":"${{ secrets.TF_VAR_ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.TF_VAR_ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TF_VAR_ARM_TENANT_ID }}"}'
      - name: Run terraform
        env: 
          TF_VAR_ARM_CLIENT_ID: ${{ secrets.TF_VAR_ARM_CLIENT_ID }}
          TF_VAR_ARM_TENANT_ID: ${{ secrets.TF_VAR_ARM_TENANT_ID }}
          TF_VAR_ARM_SUBSCRIPTION_ID: ${{ secrets.TF_VAR_ARM_SUBSCRIPTION_ID }}
          TF_VAR_ARM_CLIENT_SECRET: ${{ secrets.TF_VAR_ARM_CLIENT_SECRET }}
          TF_VAR_git_client_id: ${{ secrets.GIT_CLIENT_ID }}
          TF_VAR_git_client_secret: ${{ secrets.GIT_CLIENT_SECRET }}
        run: |
          terraform init
          terraform apply -auto-approve
      - name: Reload Azure
        run: curl -dH -X POST ${{ secrets.AZURE_WEBHOOK }}
  